import './App.css';


const SHIFT = 5;

function App() {
    const searchParams = new URLSearchParams(document.location.search);
    const name = searchParams.get('fucker') || "Bitch";
    const isCreate = searchParams.get('admin') === '1';
    let decryptedName = name;
    if (name !== 'Bitch') {
        const decodedName = decodeURIComponent(name);
        decryptedName = Encrypt(decodedName, -SHIFT);
    }
    return (
        <div className="sign">
            {!isCreate &&
                <pre>
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀      ⢀⣴⣾⡄⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⢸⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀   ⠀⠀⠀⠀       ⢸⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣛⡛⠹⣿⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⣌⣙⣉⣥⣬⣭⣉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠄⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠏⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⡟⠀⢀⣠⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣤⣤⣤⣾⣿⣿⠋⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⠀⢰⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⢠⣶⣶⣶⣤⣴⣶⣿⣿⣿⣿⣿⡟⣋⣭⣥⣤⣴⣶⣿⣷⡆⠀⠀⢸⣿⣿⣿⣿⣿⠀⣿⣿⢛⣉⣉⣉⣩⣤⣶⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢰⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⣿⣿⣿⣿⣿⠀⣿⣇⢸⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⣰⣶⣶⣦⡈⢻⣿⣿⣿⣿⣿⣿⡿⠛⠘⣿⣿⣿⣿⣿⣿⡿⠋⣠⣶⠀⠀⣿⣿⣿⣿⣿⠀⢻⣿⡄⠻⣿⣿⣿⣿⣿⣿⡟⢀⣤⣴⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣦⣙⠿⣿⠿⠛⠁⠀⠀⠀⣿⣿⣿⣿⣿⡿⠁⣼⣿⣿⠀⠀⣿⣿⣿⣿⣿⠀⠈⣿⣷⠀⠹⣿⣿⣿⣿⠀⠀⣾⡿⠛⣛⣛⣛⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠸⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⠰⣿⣿⣿⠀⠀⣿⣿⣿⣿⣿⠀⠰⠿⠟⠀⠀⢿⣿⣿⣿⡆⢠⡟⣠⣾⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⢻⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⠀⠻⣿⣿⠀⠀⣿⣿⣿⣿⣿⡀⠀⣴⣿⡆⠀⠸⣿⣿⣿⣿⠀⢰⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⢿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⢠⡀⢿⡿⠀⠀⢸⣿⣿⣿⣿⡇⠀⢿⣿⣧⠀⠀⢿⣿⣿⣿⣇⢸⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠘⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⠀⣸⣿⣶⣦⠀⠀⢸⣿⣿⣿⣿⡇⠀⠀⠻⢿⣦⡀⢸⣿⣿⣿⣿⡄⢻⣧⠙⢿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⢹⣿⣿⡇⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⡟⠀⣿⣿⠟⠁⠀⠀⢸⣿⣿⣿⣿⣷⡀⠀⠀⠀⠈⠀⢸⣿⣿⣿⣿⣷⡀⢻⠀⠀⢻⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣷⡀⠛⠁⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣶⣄⠀⢀⣴⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⣿⣿⣿⣿⣶⣄⡀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠈⣿⣿⡇⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠀⣼⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣿⣿⣇⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⣾⣿⣿⣿⣿⠿⢿⣿⣿⣿⠟⠁⠘⣿⣿⣿⣿⡿⠿⢿⣿⣿⣿⣿⡇⢹⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣿⣿⣿⣄⠀⠀⠘⢿⣿⣿⣿⠟⢋⣉⣭⣭⣍⣁⡀⠀⠘⠿⠟⣩⣴⣶⣶⣮⣍⣥⣶⣶⡄⠻⠟⣋⣥⣶⣶⣦⣝⠛⣛⡛⠃⢸⡿⠟⣋⣉⣛⠻⠏⠙⠇⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⢠⣿⣿⣿⣿⣿⣷⣄⠀⠀⢀⣤⣤⣴⣿⣿⣿⣿⣿⣿⣿⣿⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⢠⣶⣿⣿⣿⣿⣷⣀⣿⣆⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⢀⣿⣿⠿⠻⠿⢿⣿⣿⠇⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀<br/>⠀⠀⠀⠀⠀
⠀⠈⣿⢇⣶⣿⣷⣶⣦⣄⡀⠀⠙⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡘⢿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠁⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⠇⠈⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠁⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⠋⠀⠀⠘⣿⣿⣿⣿⣿⣿⠇⠀⠀⢠⣿⣿⣿⣿⣿⣿⡿⠋⠀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⡿⠛⠁⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⢸⣿⣿⣿⣿⡟⠀⠀⢠⣿⣿⣿⣿⣿⣿⠋⠀⠀⢀⣾⣿⣿⣿⣿⣿⡿⠛⠉⠁⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣆⠀⠀⠀⣼⣿⣿⣿⡿⠀⠀⣰⣿⣿⣿⣿⣿⠟⠁⠀⠀⣠⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⢻⣿⣿⣿⣿⣿⣧⠀⢠⣿⣿⣿⣿⡇⢠⣾⣿⣿⣿⣿⣿⠋⠀⠀⣀⣴⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣷⣄⠸⣿⣿⣿⣿⣿⣿⣴⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⠃⣾⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⡿⢸⣿⣿⣿⣿⣿⢰⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⡿⢋⣉⣍⡀⠙⠿⣿⣿⣿⠟⢠⣿⣿⣤⣉⣭⡄⣾⣿⣿⣿⣿⣿⠈⠻⠿⠿⠛⠉⢿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡇⢸⣿⣿⣧⢰⣷⣶⣤⣴⣆⣾⣿⣿⣿⣿⣿⣧⣿⣿⣿⣿⣿⠟⢰⣿⣶⣶⣿⠇⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠷⠘⢿⣿⣿⡀⢿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⣠⣾⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⢿⣷⡌⢿⣿⣿⡇⣿⣿⣿⠏⣴⣶⣿⡿⠟⢁⣠⣾⣿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠉⠙⠁⠈⠛⠋⠀⠛⠛⠋⠠⣶⠿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀<br/>⠀⠀⠀⠀⠀
                </pre>}
            <br/>
            {!isCreate &&
                <div className="fz">
                    <span className="fast-flicker">Fu</span>ck&nbsp;&nbsp;<span className="flicker">Y</span>ou
                </div>
            }
            <div className="fz">
                <span className="fast-flicker"
                      style={{display: isCreate ? 'none' : 'flex', textAlign: 'center'}}>{decryptedName}</span>
            </div>
            {
                isCreate &&
                <div
                    style={{display: 'flex', flexDirection: 'column', width: '40%', alignItems: 'center', gap: '10px'}}>
                    <input style={{outline: 'none', padding: '15px', borderRadius: '10px', width: '250px'}} type="text"
                           id="create" placeholder="Enter Name Here"/>
                    <button style={{
                        outline: 'none',
                        padding: '15px',
                        borderRadius: '10px',
                        marginLeft: '10px',
                        width: '200px'
                    }} onClick={Create}>Create
                    </button>
                </div>
            }
        </div>
    )
        ;
}

function Create() {
    const name = document.getElementById('create').value;
    const encryptedName = Encrypt(name, SHIFT);
    const url = window.location.href.split('?')[0];
    navigator.clipboard.writeText(`${url}?fucker=${encodeURIComponent(encryptedName)}`).then(r => {
        alert("URL Copied To Clipboard");
    });
}

function Encrypt(str, shift) {
    shift = ((shift % 26) + 26) % 26;
    let chars = str.split("");
    for (let i = 0; i < chars.length; i++) {
        let c = chars[i];
        if (c.match(/[a-z]/i)) {
            let code = chars[i].charCodeAt(0) + shift;
            if (c.match(/[A-Z]/)) {
                if (code > 90) {
                    code -= 26;
                } else if (code < 65) {
                    code += 26;
                }
            } else {
                if (code > 122) {
                    code -= 26;
                } else if (code < 97) {
                    code += 26;
                }
            }
            chars[i] = String.fromCharCode(code);
        }
    }
    return chars.join("");
}

export default App;
